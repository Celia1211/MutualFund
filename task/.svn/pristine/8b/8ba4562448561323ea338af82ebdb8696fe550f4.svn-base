package controller;

import static org.junit.Assert.assertNotNull;

import java.io.UnsupportedEncodingException;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import javax.servlet.http.HttpServletRequest;

import org.easymock.EasyMock;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.annotation.Rollback;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

import dao.EmployeeDao;

/**
 * @author wyen Wei-Yu Yen.
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "/application-context.xml" })
@Rollback
@Transactional
public class EmployeeControllerTest {
    @Autowired
    private EmployeeController employeeController;

    @Autowired
    private EmployeeDao employeeDao;

    @Test
    public void createEmployeeTest() {
        HttpServletRequest req = EasyMock.createMock(HttpServletRequest.class);
        employeeController.createEmployee("junittester@andrew.cmu.edu", "123456", "123456", "Xinyan", "Liu", req);
        assertNotNull(employeeDao.findByColumn("username", "junittester@andrew.cmu.edu"));
    }
    
    @Test
    public void testMail(){
//        String result;
//        // Recipient's email ID needs to be mentioned.
//        String to = "mengzheh@andrew.cmu.edu";
//
//        // Sender's email ID needs to be mentioned
//        String from = "marjoriehmz@gmail.com";
//
//        // Assuming you are sending email from localhost
//        String host = "smtp.gmail.com";
//
//        // Get system properties object
//        Properties properties = System.getProperties();
//
//        // Setup mail server
//        properties.setProperty("smtp.gmail.com", host);
//
//        // Get the default Session object.
//        Session mailSession = Session.getDefaultInstance(properties);
//
//        try{
//           // Create a default MimeMessage object.
//           MimeMessage message = new MimeMessage(mailSession);
//           // Set From: header field of the header.
//           message.setFrom(new InternetAddress(from));
//           // Set To: header field of the header.
//           message.addRecipient(Message.RecipientType.TO,
//                                    new InternetAddress(to));
//           // Set Subject: header field
//           message.setSubject("This is the Subject Line!");
//           // Now set the actual message
//           message.setText("This is actual message");
//           // Send message
//           Transport.send(message);
//           result = "Sent message successfully....";
//        }catch (MessagingException mex) {
//           mex.printStackTrace();
//           result = "Error: unable to send message....";
//        }

            final String username = "cmuteam13@gmail.com";
            final String password = "awesometeam13";

            Properties props = new Properties();
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");

            Session session = Session.getInstance(props,
              new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
              });

            try {

                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress("from-email@gmail.com"));
                message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse("marjoriehmz@gmail.com"));
                message.setSubject("Testing Subject");
                message.setText("Dear Mail Crawler,"
                    + "\n\n No spam to my email, please!");

                Transport.send(message);

                System.out.println("Done");

            } catch (MessagingException e) {
                throw new RuntimeException(e);
            }

        // ...
    }
}

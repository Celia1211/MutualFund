package controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import dao.CustomerDao;
import dao.EmployeeDao;
import model.Employee;
import util.Utils;

/**
 * @author wyen Wei-Yu Yen.
 */
@Controller
@Transactional
public class EmployeeController {
    @Autowired
    private CustomerDao customerDao;

    @Autowired
    private EmployeeDao employeeDao;

    @RequestMapping(path = "createEmployee", method = RequestMethod.POST)
    public String createEmployee(@RequestParam("userName") String userName, @RequestParam("password") String password,
            @RequestParam("confirmPassword") String confirmPassword, @RequestParam("firstName") String firstName,
            @RequestParam("lastName") String lastName, HttpServletRequest request) {

        List<String> errorMsgs = new ArrayList<>();
        request.setAttribute("errorMsgs", errorMsgs);

        Utils.checkRequiredField(userName, "User Name", errorMsgs);
        Utils.checkRequiredField(firstName, "First Name", errorMsgs);
        Utils.checkRequiredField(lastName, "Last Name", errorMsgs);
        Utils.checkRequiredField(password, "Password", errorMsgs);

        if (employeeDao.findByUsername(userName) != null) {
            errorMsgs.add("User Name exists!");
        }

        Utils.checkNewPassword(password, confirmPassword, errorMsgs);

        if (!errorMsgs.isEmpty()) {
            return "create-employee";
        }

        Employee emp = new Employee();
        emp.setUsername(userName);
        emp.setFirstname(firstName);
        emp.setLastname(lastName);
        emp.setPassword(Utils.md5(password));

        employeeDao.save(emp);

        request.setAttribute("message", "Success!");

        return "redirect:create-employee";
    }

    @RequestMapping(path = "createFund", method = RequestMethod.POST)
    public String createFund(String fundName, String symbol) {
        return "create-fund";

    }
}
